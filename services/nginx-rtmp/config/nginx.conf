worker_processes auto;
rtmp_auto_push on;
events {}
rtmp {
    server {
        listen 1935;
        listen [::]:1935 ipv6only=on;

        chunk_size 4096;

        # rtmp to custom launch
        application src {
            live on;

            # generate multiple resolution - solution 1
            exec ffmpeg -i rtmp://localhost/src/$name
              -c:a aac -b:a 64k  -c:v libx264 -b:v 256k -vf scale=-1:480 -f flv rtmp://localhost/hls/$name_480p
              -c:a aac -b:a 128k -c:v libx264 -b:v 512K -vf scale=-1:720 -f flv rtmp://localhost/hls/$name_720p;

            # generate multiple resoltuon - soultion 2 
            #on_play 'http://stream-broker/notify';
            #on_play_done 'http://stream-broker/notify';

            #on_publish 'http://stream-broker/notify';
            #on_publish_done 'http://stream-broker/notify';
        }

        # rtmp to hls
        application hls {
            live on;

            hls on;
            hls_path /usr/local/nginx/html/hls;
            hls_nested on;
            hls_fragment 5s;
            hls_fragment_naming timestamp;

            hls_variant _480p BANDWIDTH=320000;
            hls_variant _720p BANDWIDTH=640000;
        }
    }
}

http {
    server {
        # Listen 8080
        listen  8080;

        # hls service
        location /hls {
            # Set default type
            default_type "text/html";

            # Serve HLS fragments
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }

            # Set root
            root html;

            # Set header 
            add_header Cache-Control no-cache;
        }

        error_log /tmp/nginx_error.log debug;

    }
}
